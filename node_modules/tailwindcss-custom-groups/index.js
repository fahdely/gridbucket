var plugin = require("tailwindcss/plugin");
var getError = function (message) {
    return "`tailwindcss-custom-groups` requires ".concat(message, ".");
};
var defaultVariants = {
    first: "first-child",
    last: "last-child",
    hover: "hover",
    "focus-visible": "focus-visible"
};
module.exports = plugin(function (_a) {
    var addVariant = _a.addVariant, theme = _a.theme;
    var config = theme("customGroups");
    if (!config) {
        throw new Error(getError("`theme.customGroups` in your TailwindCSS config"));
    }
    var names = config.names, _b = config.variants, variants = _b === void 0 ? defaultVariants : _b;
    if (!names || names.length === 0) {
        throw new Error(getError("`theme.customGroups.names` to contain group names"));
    }
    if (typeof variants !== "object") {
        throw new Error(getError("`theme.customGroups.variants` to be key-value pairs"));
    }
    names.forEach(function (group) {
        var _loop_1 = function (variant) {
            var pseudoClass = variants[variant];
            addVariant("group-".concat(group, "-").concat(variant), function () {
                return ":merge(.group-".concat(group, "):").concat(pseudoClass, " &");
            });
        };
        for (var variant in variants) {
            _loop_1(variant);
        }
    });
});
